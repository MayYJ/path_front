package com.may.routeplansystem.dao;import com.may.routeplansystem.entity.po.NodePojo;import org.apache.ibatis.annotations.Param;import org.springframework.stereotype.Repository;import java.util.List;/** * @author:dengsiyuan * @Date:2018/10/29 21:12 */@Repositorypublic interface NodeDao {    /**     * 导入点的信息     *     * @param nodePojo     * @return boolea     */    boolean insertNode(NodePojo nodePojo);    /**     * 批量导入点信息     * @param nodes     * @return     */    boolean insertNodeBatch(@Param("list") List<NodePojo> nodes);    /**     * 通过nodeId删除点     *     * @param nodeId     * @return true/false     */    boolean deleteNodeByNodeId(int nodeId);    /**     * 通过问题编号删除点     *     * @param questionId     * @return true/false     */    boolean deleteNodeByQuestionId(int questionId);    /**     * 通过点名称删除点     *     * @param nodeName     * @return true/false     */    boolean deleteNodeByNodeName(String nodeName);    /**     * 通过nodeId更新点的信息     *     * @param nodePojo     * @return true     */    boolean updateNodeByNodeId(NodePojo nodePojo);    /**     * 查询点的信息     *     * @param nodeId     * @return nodePojo     */    NodePojo selectNodeByNodeId(int nodeId);    /**     * 通过点的name查询点的信息     *     * @param nodeName     * @return nodePojo     */    NodePojo selectNodeByNodeName(String nodeName);    /**     * 通过question_id查询点     * @param questionId     * @return list     */    List<NodePojo> selectCenterNode(int questionId);    /**     * 通过question_id查询点     *     * @param questionId     * @return list     */    List<NodePojo> selectServiceNode(int questionId);    /**     * 通过question_id查询点     *     * @param questionId     * @return list     */    List<NodePojo> selectAllNodes(int questionId);}